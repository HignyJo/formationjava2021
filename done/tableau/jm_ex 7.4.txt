7.4	Inversion vecteur
---------------------

Ecrire le programme qui inverse un tableau de 10 nombres

------------------------------------------------------------------------------------------------

Solution
--------

debut inversionVecteur
	
	variables locales
		const taille  :N <- 10
		var tableau	  :N [taille]
		var tabInv	  :N [taille]
		var ind1	  :N <- 0
		var ind2	  :N <- taille
		var cpt		  :N <- 0
		var cpt1		  :N <- 0
	fin variableslocales
	
	afficher "Saisissir 10 nombres : "
	pour cpt1 allant de 0 a taille-1 par pas de 1
		saisir tableau[cpt]
	cpt1 suivant
	
	for cpt allant de 0 à taille-1 par pas de 1
		tabInv[ind2] <- tableau[ind1]
		ind2 <- ind2 - 1
		ind1 <- ind1 + 1
		afficher tabInv[cpt]
	cpt suivant
	
fin inversionVecteur

-----------------------------------

debut inversionVecteur
	
	variables locales
		const taille  :N <- 10
		var tableau	  :N [taille]
		var element	  :N <- 0
		var cpt	  :N <- 0
	fin variableslocales
	
	afficher "Saisissir 10 nombres : "
	
	pour cpt allant de 0 a taille-1 par pas de 1
		saisir tableau[cpt]
	cpt suivant
	
	cpt <- 0
	
	pour cpt allant de 0 à taille-1 par pas de 1
		element <- tableau[cpt]
		tableau[cpt] <- tableau[(taille-1) - (cpt+1)]
		tableau[(taille-1) - (cpt+1)] <- element
	cpt suivant
	
	cpt <- 0
	
	pour cpt allant de 0 à taille-1 par pas de 1
		afficher tableau[cpt]
	cpt suivant
	
fin inversionVecteur

-------------------------------------

debut 7.4
    variable locales
       const TAILLE:N <-10
        var Array:N[TAILLE]
        var i : N <- 0
        var val:N <-0
    fin variable locales

     pour i allant de 0  a taille-1 par pas de 1
        affiche "entre la valeur n " + i+1
        saisir array[i]
    i suivant
     pour i allant de 0  a (TAILLE DIV 2)-1 par pas de 1
        val=array[TAILLE-1-i]
        array[taille-1-i]=array[i]
        array[i]=val
    i suivant
    pour i allant de 0  a taille-1 par pas de 1
        affiche array[i]
    i suivant
        
fin 7.4
	
	
	
	
	