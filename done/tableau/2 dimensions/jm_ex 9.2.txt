9.2 Copie tableau
---------------------------------

Ecrire le programme qui copie les éléments d'un tableau à 2 dimensions dans un tableau à
une dimension du nombre de cases.

	1. Faire l'exercice en utilisant 3 variables d'indice.
	2. Faire l'exercice en utilisant 2 variables d'indice.
	3. Faire l'exercice en utilisant 1 variable  d'indice.

------------------------------------------------------------------------------------------------

|-------------|
| Solution 1. |
|-------------|

debut copieTableau

	variables locales
		const taille  :N <- 10
		const taille2 :N <- taille*taille
		var tableau	  :N [taille][taille]
		var tableau2  :N [taille2]
		var ind1	:N <- 0
		var ind2	:N <- 0
		var ind3	:N <- 0
	fin variables locales
	
	pour ind1 allant de 0 à taille-1 faire
		pour ind3 allant de 0 à taille2(-1)
			tableau2[ind3] <- tableau[ind1][ind2]
			ind2 <- ind2 + 1
		ind1 suivant
	ind3 suivant
	
fin copieTableau

-----------------------------------------

debut 9.2
    variable locale 
        CONST TAILLEX : N <- 10
        CONST TAILLEY : N <- 15
        var arrayDoubleDim:N[TAILLEX][TAILLEY]
        var arraySimpleDim : N [TAILLEX*TAILLEY]
        var i: N <-0
        var j: N <-0 
        var cpt : N <-0
    fin de variable locales 
    pour i allant de 0  a TAILLEX par pas de 1
        pour j allant de 0 a TAILLEY par pas de 1
           arraySimpleDim[cpt]=arrayDoubleDim[i][j]
           cpt<- cpt +1 
fin 9.2

------------------------------------------------------

debut copietableau1
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var j :n <- 1
        var k :n <- 1
    fin variables locales

    // ex 9.2.1

    pour i allant de 1 a taille par pas de 1
        pour j allant de 1 a taille par pas de 1
            tab2[k] <- tab1[i, j]
            k <- k + 1
        j suivant
    i suivant

fin copietableau1

|-------------|
| Solution 2. |--------------------------------------------------------------------------------
|-------------|

debut copieTableau

	variables locales
		const taille  :N <- 10
		const taille2 :N <- taille*taille
		var tableau	  :N [taille][taille]
		var tableau2  :N [taille2]
		var ind1	:N <- 0
		var ind2	:N <- 0
	fin variables locales
	
	
	
fin copieTableau

------------------------------------------------------

debut copietableau2
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var j :n <- 1
    fin variables locales

    // ex 9.2.2

    pour i allant de 1 a taille par pas de 1
        pour j allant de 1 a taille par pas de 1
            tab2[((i - 1) * taille) + j] <- tab1[i, j]
        j suivant
    i suivant

fin copietableau2

|-------------|
| Solution 3. |--------------------------------------------------------------------------------
|-------------|

debut copieTableau

	variables locales
		const taille  :N <- 10
		const taille2 :N <- taille*taille
		var tableau	  :N [taille][taille]
		var tableau2  :N [taille2]
		var ind1	:N <- 0
	fin variables locales
	
	
	
fin copieTableau

---------------------------------------------------

debut copietableau3
    variables locales
        var taille :n <- ...
        var tab1 :n [taille, taille]
        var tab2 :n [taille * taille]
        var i :n <- 1
        var ligne :n <- 1
        var colonne :n <- 1
    fin variables locales

    // ex 9.2.3

    pour i allant de 1 a taille * taille par pas de 1
        si i mod taille = 0
            alors
                ligne <- i div taille
                colonne <- taille
            sinon
                ligne <- (i div taille) + 1
                colonne <- i mod taille
        fin si

        tab2[i] <- tab1[ligne, colonne]
    i suivant

fin copietableau3